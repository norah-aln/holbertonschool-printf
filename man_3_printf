.TH _PRINTF 3 "March 2025" "holbertonschool-printf" "Library Functions Manual"

.SH NAME
_printf \- produces formatted output according to a format string

.SH SYNOPSIS
.B #include "main.h"
.sp
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The
.B _printf
function sends formatted output to the standard output stream (stdout). It mimics the standard `printf` function but with custom functionality. The format string contains directives (conversion specifiers) that determine how subsequent arguments are formatted and displayed.

Supported conversion specifiers:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string.
.TP
.B %%
Prints a literal percent sign.
.TP
.B %d, %i
Prints an integer. Negative integers and the edge case of `INT_MIN` are handled explicitly.

.SH RETURN VALUE
.B _printf
returns the number of characters printed (excluding the null byte used to end output strings). It returns \-1 if an error occurs.

.SH FUNCTIONS
Additional functions supporting _printf:
.TP
.B int print_char(va_list args)
Prints a single character from the argument list.
.TP
.B int print_string(va_list args)
Prints a string from the argument list. Handles NULL strings by printing "(null)".
.TP
.B int print_percent(void)
Prints a literal percent sign ("%").
.TP
.B int print_number(int num)
Recursively prints each digit of an integer.
.TP
.B int print_integer(va_list args)
Prints an integer from the argument list. Handles negative numbers and the edge case `INT_MIN`.

.SH EXAMPLES
Here is a simple example using
.B _printf:
.PP
#include "main.h"
.sp
int main(void) {
_printf("Character: %c\n", 'A');
_printf("String: %s\n", "Hello, World!");
_printf("Integer: %d\n", 123);
_printf("Percent: %%\n");
return 0;
}

.SH SEE ALSO
.BR printf (3),
.BR fprintf (3),
.BR sprintf (3)

.SH AUTHOR
Developed as part of the holbertonschool-printf project.

.SH COPYRIGHT
This man page is part of the holbertonschool-printf project for educational purposes.

